package game;

import java.awt.Graphics;
import java.awt.Image;
import java.awt.event.KeyEvent;
import java.util.Vector;

public class GameScene extends GameCanvas {

	public final static int UP_PRESSED = 0x001;
	public final static int DOWN_PRESSED = 0x002;
	public final static int LEFT_PRESSED = 0x004;
	public final static int RIGHT_PRESSED = 0x008;
	public final static int FIRE_PRESSED = 0x010;

	int cnt;

	int bgY;// 배경화면 위치
	int bgX;

	int _speed;// 배경 스크롤 속도

	public GameScene(GameManager manager) {

		super(manager);

		manager.nowCanvas = (GameCanvas) this;
	}

	@Override
	public void dblpaint(Graphics gContext) {
		// TODO Auto-generated method stub

		// 배경을 그리고
		gContext.drawImage(bg, bgX, bgY, this);

	}

	@Override
	public void update() {
		// TODO Auto-generated method stub
	}

	@Override
	public void Destroy() {
		// TODO Auto-generated method stub
		super.Destroy();
		manager.remove(this);// GameManager의 firstScene에서 이 씬(클래스)을 add했으므로,
								// remove하여 제거한다.
		releaseImage();
	}

	Image bg;// 게임 배경. 무한스크롤을 위해 2개 사용한다

	@Override
	public void initImage() {
		// TODO Auto-generated method stub

		bg = manager.makeImage("img/bg.png");
	}

	@Override
	public void releaseImage() {
		// TODO Auto-generated method stub

		bg = null;
	}

	@Override
	public void SceneStart() {
		// TODO Auto-generated method stub
		// 별도의 씬 초기화를 위해 SceneStart를 오버라이드하고, 마지막에 super를 호출한다

		cnt = 0;

		// 배경용 좌표 (계산하기 편하게)
		bgY = 0;

		// 게임 관련 정보 초기화
		_speed = 4;// 배경 스크롤 속도

		super.SceneStart();
	}

	@Override
	public void keyReleased(KeyEvent e) {
		// TODO Auto-generated method stub

		switch (e.getKeyCode()) {
		case KeyEvent.VK_W:
			if (_speed < 50)
				_speed++;
			break;

		case KeyEvent.VK_A:
			if (_speed > 1)
				_speed--;
			break;

		case KeyEvent.VK_S:
			_speed += 10;
			if (_speed > 50)
				_speed = 50;
			break;

		case KeyEvent.VK_D:
			_speed -= 10;
			if (_speed < 1)
				_speed = 1;
			break;
		}
	}

	// 여기서부터 오리지널 함수
}
